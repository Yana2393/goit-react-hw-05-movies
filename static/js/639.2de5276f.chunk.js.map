{"version":3,"file":"static/js/639.2de5276f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ListMovies/ListMovies.module.css?08bb","components/ListMovies/ListMovies.jsx","webpack://react-homework-template/./src/components/FilteredMovies/FilteredMovies.module.css?4f3f","components/FilteredMovies/FilteredMovies.jsx","components/services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listWrapp\":\"ListMovies_listWrapp__pakEg\",\"list\":\"ListMovies_list__jtcUy\",\"listItem\":\"ListMovies_listItem__aCNmD\",\"listImg\":\"ListMovies_listImg__I3Pbl\",\"listName\":\"ListMovies_listName__M4SSI\",\"listText\":\"ListMovies_listText__ngq9h\"};","import React from 'react';\nimport css from './ListMovies.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultImg from '../defolt-img/defaultImg.jpeg';\nimport PropTypes from 'prop-types';\n\nconst ListMovies = ({ movies }) => {\n  const location  = useLocation();\n\n  return (\n    <div className={css.listWrapp}>\n      {movies.length < 0 ? (\n        <p className={css.listText}>No movies found</p>\n      ) : (\n        <ul className={css.list}>\n          {movies.map(movie => (\n            <li key={movie.id} className={css.listItem}>\n              <img\n                className={css.listImg}\n                src={\n                  movie.poster_path === null\n                    ? defaultImg\n                    : `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                }\n                alt={movie.title}\n              />\n              <Link state={location} to={`/movies/${movie.id}`} className={css.listName}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nListMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }),\n  ).isRequired,\n}\n\nexport default ListMovies;","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapp\":\"FilteredMovies_filterWrapp__NRrEK\",\"filterLink\":\"FilteredMovies_filterLink__FlHq1\",\"filterForm\":\"FilteredMovies_filterForm__mp-6T\",\"filterInput\":\"FilteredMovies_filterInput__eom9-\",\"filterBtn\":\"FilteredMovies_filterBtn__dFnxl\"};","import { useEffect, useState } from 'react';\nimport { searchMovies } from '../services/getMovies';\nimport ListMovies from '../ListMovies/ListMovies';\nimport css from './FilteredMovies.module.css'\nimport { useSearchParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\n\nconst FilteredMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const param = searchParams.get(\"query\") || '';\n\n  useEffect(() => {\n    if(!param) return \n    setLoading(true);\n    searchMovies(param)\n      .then(data => {\n        setMovies(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(true);\n        setLoading(false);\n      });\n\n  }, [param])\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n \n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query.trim()) {\n      return alert('Enter text');\n    }\n    setSearchParams({ query });\n  };\n\n  return (\n    <div className={css.filterWrapp}>\n      <form onSubmit={e => handleSubmit(e)} className={css.filterForm}>\n        <input className={css.filterInput}\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={e => handleChange(e)}\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\" className={css.filterBtn}>Search</button>\n      </form>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>Error occurred while loading movies.</p>\n      ) : (\n        <ListMovies movies={movies} />  \n      )}\n    </div>\n  );\n};\n\nFilteredMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default FilteredMovies;\n","import axios from 'axios';\n\nconst API_KEY = '5e8d1285d45d2f3ac11834ca8f1680cd';\n\nexport const getTrendMovies = async () => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n        return response.data.results;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const searchMovies = async (query) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data.results;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const getMovieDetails = async (movieId) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const getMovieCredits = async (movieId) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data.cast;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const getMovieReviews = async (movieId) => { \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        return response.data.results;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n}"],"names":["movies","location","useLocation","className","css","length","map","movie","src","poster_path","defaultImg","alt","title","state","to","id","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","setMovies","loading","setLoading","error","setError","param","get","useEffect","searchMovies","then","data","catch","err","onSubmit","e","preventDefault","trim","alert","handleSubmit","type","name","value","onChange","target","handleChange","placeholder","API_KEY","getTrendMovies","axios","response","results","console","log","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}