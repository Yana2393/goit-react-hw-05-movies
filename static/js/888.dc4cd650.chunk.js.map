{"version":3,"file":"static/js/888.dc4cd650.chunk.js","mappings":"2NACA,EAA6B,iCAA7B,EAAsE,4BAAtE,EAA6G,+BAA7G,EAA4J,oCAA5J,EAA6M,iCAA7M,EAA6P,mCAA7P,EAA2S,+BAA3S,EAAsV,gCAAtV,EAA6X,2B,0BCiF7X,EAxEqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,QAAOH,EAASI,OAA5BF,QAER,GAA0BG,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAgBb,GAASc,MAAK,SAAAC,GAC5BN,EAASM,GACTJ,GAAW,EACZ,GACF,GAAE,CAACX,IAEAU,GACK,wCAGJF,GAKH,iBAAKQ,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMC,GAAE,OAAEd,QAAF,IAAEA,EAAAA,EAAW,IAArB,qBACA,iBAAKY,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXE,IACwB,OAAtBX,EAAMY,YACFC,EADJ,0CAEuCb,EAAMY,aAE/CE,IAAKd,EAAMe,SAEb,iBAAKP,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA+BT,EAAMe,SACrC,eAAGP,UAAWC,EAAd,sBACU,iBAAMD,UAAWC,EAAjB,SAAgCT,EAAMgB,eAAqB,QAErE,eAAGR,UAAWC,EAAd,mBACS,IACNT,EAAMiB,OAAOC,KAAI,SAAAC,GAChB,OACE,kBAAqBX,UAAWC,EAAhC,UACGU,EAAMC,KAAM,MADJD,EAAME,GAIpB,QAEH,eAAGb,UAAWC,EAAd,2BACe,iBAAMD,UAAWC,EAAjB,SAAgCT,EAAMsB,qBAIzD,iBAAKd,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMC,GAAG,OAAOF,UAAWC,EAA3B,mBAGA,SAAC,KAAD,CAAMC,GAAG,UAAUF,UAAWC,EAA9B,yBAIF,SAAC,KAAD,OA5CK,IA+CV,C,+LC7EKc,EAAU,mCAEHC,EAAc,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,kEAAqEF,EAArE,oBAFD,cAEhBG,EAFgB,yBAGfA,EAASnB,KAAKoB,SAHC,uCAKtBC,QAAQC,IAAR,MALsB,yFAAH,qDAUdC,EAAY,mCAAG,WAAOC,GAAP,gGAEGN,EAAAA,EAAAA,IAAA,0DAA6DM,EAA7D,oBAA8ER,EAA9E,2BAFH,cAEdG,EAFc,yBAGbA,EAASnB,KAAKoB,SAHD,uCAKpBC,QAAQC,IAAR,MALoB,yFAAH,sDAUZxB,EAAe,mCAAG,WAAOb,GAAP,gGAEAiC,EAAAA,EAAAA,IAAA,6CAAgDjC,EAAhD,oBAAmE+B,EAAnE,oBAFA,cAEjBG,EAFiB,yBAGhBA,EAASnB,MAHO,uCAKvBqB,QAAQC,IAAR,MALuB,yFAAH,sDAUfG,EAAe,mCAAG,WAAOxC,GAAP,gGAEAiC,EAAAA,EAAAA,IAAA,6CAAgDjC,EAAhD,4BAA2E+B,EAA3E,oBAFA,cAEjBG,EAFiB,yBAGhBA,EAASnB,KAAK0B,MAHE,uCAKvBL,QAAQC,IAAR,MALuB,yFAAH,sDAUfK,EAAe,mCAAG,WAAO1C,GAAP,gGAEAiC,EAAAA,EAAAA,IAAA,6CAAgDjC,EAAhD,4BAA2E+B,EAA3E,oBAFA,cAEjBG,EAFiB,yBAGhBA,EAASnB,KAAKoB,SAHE,uCAKvBC,QAAQC,IAAR,MALuB,yFAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieWrapp\":\"MovieDetails_movieWrapp__G5UWp\",\"movie\":\"MovieDetails_movie__vEd44\",\"movieImg\":\"MovieDetails_movieImg__dR5Cx\",\"movieWrappTxt\":\"MovieDetails_movieWrappTxt__BplnO\",\"movieTitle\":\"MovieDetails_movieTitle__qwoTW\",\"movieSpanTxt\":\"MovieDetails_movieSpanTxt__GI3LV\",\"movieTxt\":\"MovieDetails_movieTxt__-hJWb\",\"linkWrapp\":\"MovieDetails_linkWrapp__wzbGz\",\"link\":\"MovieDetails_link__wf74g\"};","import React, { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../services/getMovies';\nimport { useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport defaultImg from '../defolt-img/defaultImg.jpeg'\nimport { Link, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const { current } = useRef(location.state);\n\n  const [movie, setMovie] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId).then(data => {\n      setMovie(data);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!movie) {\n    return null;\n  }\n\n  return (\n    <div className={css.movieWrapp}>\n      <Link to={current ?? '/'}> Back </Link>\n      <div className={css.movie}>\n        <img\n          className={css.movieImg}\n          src={\n            movie.poster_path === null\n              ? defaultImg\n              : `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n          }\n          alt={movie.title}\n        />\n        <div className={css.movieWrappTxt}>\n          <p className={css.movieTitle}>{movie.title}</p>\n          <p className={css.movieSpanTxt}>\n            Rating: <span className={css.movieTxt}>{movie.vote_average}</span>{' '}\n          </p>\n          <p className={css.movieSpanTxt}>\n            Genre:{' '}\n            {movie.genres.map(genre => {\n              return (\n                <span key={genre.id} className={css.movieTxt}>\n                  {genre.name}{' '}\n                </span>\n              );\n            })}\n          </p>\n          <p className={css.movieSpanTxt}>\n            Description: <span className={css.movieTxt}>{movie.overview}</span>\n          </p>\n        </div>\n      </div>\n      <div className={css.linkWrapp}>\n        <Link to=\"cast\" className={css.link}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" className={css.link}>\n          Reviews\n        </Link>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '5e8d1285d45d2f3ac11834ca8f1680cd';\n\nexport const getTrendMovies = async () => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n        return response.data.results;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const searchMovies = async (query) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data.results;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const getMovieDetails = async (movieId) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const getMovieCredits = async (movieId) => {\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data.cast;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n};\n\nexport const getMovieReviews = async (movieId) => { \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n        return response.data.results;\n    } catch (err) {\n        console.log(err);\n        return err;\n    };\n}"],"names":["movieId","useParams","location","useLocation","current","useRef","state","useState","movie","setMovie","loading","setLoading","useEffect","getMovieDetails","then","data","className","css","to","src","poster_path","defaultImg","alt","title","vote_average","genres","map","genre","name","id","overview","API_KEY","getTrendMovies","axios","response","results","console","log","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}